0.5.5
-----
  * Incompatible API changes:
    - kdump_get_typed_attr(): parameters and type mismatch behaviour
    - kdump_attr_ref_get(): result must be discarded
  * Support flattened ELF dump files.
  * Support partially rearranged makedumpfile split files.
  * Parse QEMU CPU state ELF notes.
  * Use kernel page tables when initializing X86-64 Linux with PTI from
    CR3 register value.
  * Include the kdumpid utility.
  * Fix direct mapping if LDT PTI remapping is used in Linux on X86-64.
  * Minor cache improvements and a NULL-pointer dereference fix.
  * Fix test suite for 32-bit architectures.

0.5.4
-----
  * Full support for 64-bit RISC-V.
  * Improve error messages (detailed OS error, optional file names)
  * Bug fixes and minor performance tweaks.

0.5.3
-----
  * Support flattened KDUMP format.

0.5.2
-----
  * Full support for 32-bit Arm.
  * ERASEINFO in the file.eraseinfo.raw attribute.

0.5.1
-----
  * Bitmap of all RAM in the memory.pagemap attribute.
  * Enhance the API with conversions between numeric and string PTE format:
    addrxlat_pte_format(), addrxlat_pte_format_name().
  * Improve compatibility (mawk, Python 3.12).

0.5.0
-----
  * Support SADUMP file format.
  * Add kdump_open_fd() and kdump_open_fdset(). Keep KDUMP_ATTR_FILE_FD
    for (partial) backward compatibility.
  * Redesigned addrxlat callback API.
  * Support KDUMP file sets created by makedumpfile --split.
  * Zstandard compression algorithm
  * AArch64 52-bit VA
  * Address translation tuning with addrxlat.default.* and addrxlat.force.*
    attributes.
    The old mechanism using addrxlat.opts is no longer available.
  * Fix Xen DomU translation type detection for /dev/mem.

0.4.1
-----
  * Automatic translation setup for Linux/aarch64
  * Support AMD EPYC with SME active
  * New attributes:
    - file.mmap_policy
    - file.mmap_cache.hits
    - file.mmap_cache.misses
    - file.read_cache.hits
    - file.read_cache.misses
  * Change *.vmcoreinfo.raw attributes from string to blob
  * Change kdump_vmcoreinfo_raw() and kdump_vmcoreinfo_line()
    - Caller is now the owner of the output string

0.4.0
-----
  * AArch64 paging
  * X86-64 5-level paging
  * Kernel layout auto-detection with kASLR on X86-64
  * Bitmap and blob attribute formats
  * New attributes:
    - file.bitmap attribute
    - file.zero_excluded
    - addrxlat.opts.pre
    - addrxlat.opts.post
    - xen.phys_start
  * Improve libaddrxlat read callback API performance: whole page per call
    instead of a 32-bit or 64-bit entity per call

0.3.0
-----
  * Complete API re-design:
    - split libaddrxlat from libkdumpfile
    - attribute references
    - attribute iterators
    - addrxlat callbacks and callback hook
  * Python bindings.
  * Comprehensive test suite for libaddrxlat.
  * Caching of dump pages.
  * Thread safety (see threads.md).
  * Improved Doxygen documentation (run 'make doxygen-doc').

0.2.0
-----
  * Unit tests (run "make check")
  * API and ABI changed:
    - new names, types and semantics of KDUMP_*ADDR constants for
      kdump_readp() and friends
    - parameters reordered
    - obsolete Xen functions removed
  * differentiation of Xen dump types (attribute "xen.type")
  * support for opening dumps in Xen hypervisor mode
  * many other Xen improvements
  * fix reading LKCD dump files

0.1.7
-----
  * fix build failures

0.1.6
-----
  * metadata is stored as hierarchical attributes which can be enumerated
  * include example code to demonstrate attributes

0.1.5
-----
  * improved support of Xen dumpcore files
  * basic support for MIPS architecture
  * fix support for LKCD dumps on s390x

0.1.4
-----
  * support for IA32 (32-bit x86) architecture
  * verbose error reporting
  * document the public API

0.1.3
-----
  * support S390 dump format
  * new API functions:
    - kdump_pageshift

0.1.2
-----
  * all compression libraries are now optional
  * live source uses VMCOREINFO from the running kernel (if available)
  * full vtop translation for x86_64

0.1.1
-----
  * add missing files
  * fix compiler warnings

0.1
---
  * first public release
